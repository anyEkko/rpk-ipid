name: 云编译 rkp-ipid.ipk

# 触发条件：手动触发 + 代码推送（可选）
on:
  workflow_dispatch:  # 手动在 GitHub Actions 页面触发
    inputs:
      openwrt_branch:  # 可选择 OpenWRT 分支（适配项目兼容性）
        description: "选择 OpenWRT 源码分支"
        required: true
        default: "main"
        type: choice
        options:
          - main
          - openwrt-23.05
          - openwrt-22.03

# 编译任务
jobs:
  build-ipk:
    runs-on: ubuntu-latest  # 基础环境（Ubuntu 兼容性最佳）
    steps:
      # 1. 安装编译依赖（OpenWRT 编译必需工具）
      - name: 安装依赖包
        run: |
          sudo apt update && sudo apt install -y \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev \
            libssl-dev python3-distutils rsync unzip zlib1g-dev \
            file wget curl

      # 2. 拉取 OpenWRT 源码（根据选择的分支）
      - name: 克隆 OpenWRT 源码
        run: |
          git clone -b ${{ github.event.inputs.openwrt_branch }} https://github.com/openwrt/openwrt.git openwrt-src
          cd openwrt-src
          # 更新源码及 feeds（确保依赖完整）
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 3. 拉取 rkp-ipid 项目到 OpenWRT 包目录（关键步骤）
      - name: 部署 rkp-ipid 源码
        run: |
          # 创建自定义包目录（避免覆盖官方包）
          mkdir -p openwrt-src/package/custom/rkp-ipid
          # 克隆 rkp-ipid 项目到指定目录（匹配 OpenWRT 包结构）
          git clone https://github.com/CHN-beta/rkp-ipid.git openwrt-src/package/custom/rkp-ipid
          # 检查项目文件是否存在（确保部署成功）
          ls -l openwrt-src/package/custom/rkp-ipid

      # 4. 配置编译选项（仅编译 rkp-ipid，减少耗时）
      - name: 配置编译参数
        run: |
          cd openwrt-src
          # 加载默认配置（最小化配置，仅保留必要架构）
          make defconfig
          # 启用 rkp-ipid 包（CONFIG_PACKAGE_rkp-ipid=y）
          echo "CONFIG_PACKAGE_rkp-ipid=y" >> .config
          # 禁用不必要的编译项（加速编译）
          echo "CONFIG_PACKAGE_luci=n" >> .config  # 禁用 LuCI（非必需）
          echo "CONFIG_BUILD_LOG=y" >> .config    # 启用编译日志（便于排错）
          # 生成最终编译配置
          make menuconfig -o .config  # 非交互生成配置

      # 5. 编译 rkp-ipid.ipk（多线程加速，根据服务器性能调整 -j 后的数字）
      - name: 编译 ipk 包
        run: |
          cd openwrt-src
          # -j4 表示 4 线程编译，可改为 -j$(nproc) 自动适配 CPU 核心数
          make package/rkp-ipid/compile V=s -j4

      # 6. 上传编译产物（ipk 文件）
      - name: 上传 ipk 到 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rkp-ipid-ipk-${{ github.event.inputs.openwrt_branch }}  # 产物名称（含分支信息）
          path: |
            # 匹配所有架构下的 rkp-ipid.ipk（项目支持多架构，避免漏文件）
            openwrt-src/bin/packages/**/rkp-ipid_*.ipk
          if-no-files-found: error  # 无文件时报错（便于排查问题）
          compression-level: 6      # 压缩等级（1-9，6 为平衡值）
          retention-days: 7         # 产物保留 7 天（可调整）
